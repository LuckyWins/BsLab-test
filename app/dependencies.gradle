ext {
    versions = [
            support            : "2.0.0-rc01",
            androidX           : "1.0.0",
            design             : "1.0.0",
            constraintlayout   : "1.1.3",
            multiDex           : '2.0.0',
            firebase           : '12.0.1',
            moshi              : "1.6.0",
            okHttp             : "3.10.0",
            retrofit           : '2.4.0',
            dagger             : '2.15',
            butterKnife        : '10.0.0',
            rxKotlin           : '2.2.0',
            rxAndroid          : '2.1.0',
            rxBindings         : '2.1.1',
            rxPermissions      : '0.9.4@aar',
            sqlbrite           : '1.1.2',
            traceur            : '1.0.1',
            stetho             : '1.5.0',
            timber             : '4.7.0',
            glide              : '4.6.1',
            sherlock           : '1.0.4@aar',
            fragmentAnnotations: '4.0.0-RC1',
            activityStarter    : '1.11-beta',
            zxing              : '3.6.0',

            usbSerial          : '6.0.5',

            espresso           : '3.0.1',
            testRunner         : '1.0.1',
            hamcrest           : '1.4-atlassian-1',
            restMock           : '0.3.1',
            mockito            : '2.18.0',
            junit              : '4.12',
            robolectric        : '3.8',
            assertj            : '1.2.0',
            powerMock          : '1.6.6',
            leakcanary         : '1.5.4',
            stethOkhttp        : '1.5.0',
            mockitoKotlin      : '1.5.0'
    ]

    mockito = [mockito: "org.mockito:mockito-core:$versions.mockito"]
    junit = [junit: "junit:junit:$versions.junit"]
    restMock = [restMock: "com.github.andrzejchm.RESTMock:android:$versions.restMock"]

    supportDeps = [
            cardView         : "androidx.cardview:cardview:$versions.androidX",
            appcompatV7      : "androidx.appcompat:appcompat:$versions.androidX",
            recyclerView     : "androidx.recyclerview:recyclerview:$versions.androidX",
            supportAnnotation: "androidx.annotation:annotation:$versions.androidX",
            gridLayout       : "androidx.gridlayout:gridlayout:$versions.androidX",
            multiDex         : "androidx.multidex:multidex:$versions.multiDex",
            constraintLayout : "androidx.constraintlayout:constraintlayout:$versions.constraintlayout",
            design           : "com.google.android.material:material:$versions.design"
    ]

    rxJava = [
            rxKotlin        : "io.reactivex.rxjava2:rxkotlin:$versions.rxKotlin",
            rxAndroid       : "io.reactivex.rxjava2:rxandroid:$versions.rxAndroid",
            traceur         : "com.tspoon.traceur:traceur:$versions.traceur",
            rxRermissions   : "com.tbruyelle.rxpermissions:rxpermissions:$versions.rxPermissions",
            rxBindings      : "com.jakewharton.rxbinding2:rxbinding-kotlin:$versions.rxBindings",
            rxBindingsRV    : "com.jakewharton.rxbinding2:rxbinding-recyclerview-v7-kotlin:$versions.rxBindings",
            rxBindingsDesign: "com.jakewharton.rxbinding2:rxbinding-design-kotlin:$versions.rxBindings"
    ]

    retrofit = [
            retrofit        : "com.squareup.retrofit2:retrofit:$versions.retrofit",
            rxAdapter       : "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit",
            moshiConverter  : "com.squareup.retrofit2:converter-moshi:$versions.retrofit",
            scalarsConverter: "com.squareup.retrofit2:converter-scalars:$versions.retrofit",
            sqlbrite        : "com.squareup.sqlbrite:sqlbrite:$versions.sqlbrite"
    ]

    moshi = [
            moshi: "com.squareup.moshi:moshi-kotlin:$versions.moshi"
    ]

    okHttp = [
            logger: "com.squareup.okhttp3:logging-interceptor:$versions.okHttp",
            okhttp  : "com.squareup.okhttp3:okhttp:$versions.okHttp",
            stetho  : "com.facebook.stetho:stetho-okhttp3:$versions.stetho"
    ]

    activityStarter = [
            activityStarter       : "com.marcinmoskala.activitystarter:activitystarter:$versions.activityStarter",
            activityStarterKotlin : "com.marcinmoskala.activitystarter:activitystarter-kotlin:$versions.activityStarter"
    ]

    googlePlay = [
            maps             : "com.google.android.gms:play-services-maps:$versions.firebase",
            crash            : "com.google.firebase:firebase-crash:$versions.firebase",
            firebaseCore     : "com.google.firebase:firebase-core:$versions.firebase",
            firebaseMessaging: "com.google.firebase:firebase-messaging:$versions.firebase"
    ]
    onlyDebug = [
            chuck   : "com.readystatesoftware.chuck:library:1.1.0"
    ]

    onlyRelease = [
            chuckNoOp       : 'com.readystatesoftware.chuck:library-no-op:1.1.0',
            sherlockNoOp    : 'com.github.ajitsing:sherlock-no-op:1.0.4@aar'
    ]

    unitTest = [
            harcrestCore        : "org.hamcrest:hamcrest-core:$versions.hamcrest",
            harmcrestLib        : "org.hamcrest:hamcrest-library:$versions.hamcrest",
            hamcrestIntegration : "org.hamcrest:hamcrest-integration:$versions.hamcrest",
            robolectric         : "org.robolectric:robolectric:$versions.robolectric",
            supportAnnotation   : "com.android.support:support-annotations:$versions.support",
            restMock            : "com.github.andrzejchm.RESTMock:android:$versions.restMock",
            assertj             : "com.squareup.assertj:assertj-android:$versions.assertj",
            kotlinTest          : "org.jetbrains.kotlin:kotlin-test:$kotlin_version",
            kotlinJunit         : "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version",
            mockitoKotlin       : "com.nhaarman:mockito-kotlin:$versions.mockitoKotlin"

    ] + junit + mockito + restMock

    androidTests = [
            mockitoAndroid      : "org.mockito:mockito-android:$versions.mockito",
            espressoCore        : "com.android.support.test.espresso:espresso-core:$versions.espresso",
            espressoContrib     : "com.android.support.test.espresso:espresso-contrib:$versions.espresso",
            espressoIntents     : "com.android.support.test.espresso:espresso-intents:$versions.espresso",
            espressoAcc         : "com.android.support.test.espresso:espresso-accessibility:$versions.espresso",
            espressoIdle        : "com.android.support.test.espresso:espresso-idling-resource:$versions.espresso",
            espressoConcurrent  : "com.android.support.test.espresso.idling:idling-concurrent:$versions.espresso",
            espressoNetIdle     : "com.android.support.test.espresso.idling:idling-net:$versions.espresso",
            testRunner          : "com.android.support.test:runner:$versions.testRunner",
            testRules           : "com.android.support.test:rules:$versions.testRunner"
    ] + mockito + restMock

    leakCannary = "com.squareup.leakcanary:leakcanary-android:1.5.1"
    timber = "com.jakewharton.timber:timber:$versions.timber"
    sherlock = "com.github.ajitsing:sherlock:$versions.sherlock"

    dagger = "com.google.dagger:dagger:$versions.dagger"
    daggerCompiler = "com.google.dagger:dagger-compiler:$versions.dagger"

    butterKnife = "com.jakewharton:butterknife:$versions.butterKnife"
    butterKnifeCompiler = "com.jakewharton:butterknife-compiler:$versions.butterKnife"

    glide = "com.github.bumptech.glide:glide:$versions.glide"
    glideCompiler = "com.github.bumptech.glide:compiler:$versions.glide"
    glideOkhttp = "com.github.bumptech.glide:okhttp3-integration:$versions.glide"

    usbSerial = "com.github.felHR85:UsbSerial:$versions.usbSerial"

    fragmentAnnotations = "com.hannesdorfmann.fragmentargs:annotation:$versions.fragmentAnnotations"
    fragmentAnnotationsCompiler = "com.hannesdorfmann.fragmentargs:processor:$versions.fragmentAnnotations"

    activityStarterCompiler = "com.marcinmoskala.activitystarter:activitystarter-compiler:$versions.activityStarter"

    zxing = "com.journeyapps:zxing-android-embedded:$versions.zxing"

    moshiCompiler = "com.squareup.moshi:moshi-kotlin-codegen:$versions.moshi"

    googlePlayLibs = googlePlay.values()
    supportLibs = supportDeps.values()
    networkLibs = retrofit.values() + okHttp.values() + moshi.values()
    rxJavaLibs = rxJava.values()
    activityStarterLibs = activityStarter.values()
    otherLibs = [butterKnife, timber, dagger, glide, fragmentAnnotations, zxing]


    debugLibs = onlyDebug.values() + leakCannary
    releaseLibs = onlyRelease.values() + leakCannary
    annotationProcessorLibs = [butterKnifeCompiler, daggerCompiler, glideCompiler, fragmentAnnotationsCompiler, activityStarterCompiler, moshiCompiler]

    unitTestLibs = unitTest.values() + leakCannary
    androidTestsLibs = androidTests.values() + supportLibs
}